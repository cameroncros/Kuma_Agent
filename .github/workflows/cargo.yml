name: Test

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Test Commit
    timeout-minutes: 30

    # The CMake configure and build commands are platform-agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install prereqs
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install python3 python3-pip python3-venv python3-wheel

      - name: Install toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test

      - name: Package
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cargo-deb
          cargo deb

      - name: Package
        if: matrix.os == 'windows-latest'
        run: |
          cargo install cargo-wix
          cargo wix -I install/package.wxs --nocapture

      - uses: actions/upload-artifact@master
        if: matrix.os == 'windows-latest'
        with:
          name: kuma_agent.msi
          path: target/wix/*.msi
      - uses: actions/upload-artifact@master
        if: matrix.os == 'ubuntu-latest'
        with:
          name: kuma_agent.deb
          path: target/debian/*.deb
      - uses: actions/upload-artifact@master
        if: matrix.os == 'ubuntu-latest'
        with:
          name: PKGBUILD
          path: install/PKGBUILD

  release-draft:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@master
        with:
          name: kuma_agent.msi
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: kuma_agent.deb
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: PKGBUILD
          path: ./

      - name: Release
        id: create_dev_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: "Release - $GITHUB_SHA"
          files: |
            ./*

  release-actual:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@master
        with:
          name: pc_manager.msi
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: pc_manager.deb
          path: ./
      - uses: actions/download-artifact@master
        with:
          name: PKGBUILD
          path: ./

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ github.ref }}
          name: "Release - ${{ github.ref }}"
          draft: false
          prerelease: false
          files: |
            ./*
